#compdef ghn

# The MIT License (MIT)
#
# Copyright (c) 2016 Syohei YOSHIDA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

local -a _ghn_subcommands
_ghn_subcommands=(
  'list:Describe available commands or one specific command'
  'open:List unread notifications'
  'help:Create a new dist'
)

_arguments '*:: :->subcmd'

if [[ "$state" == "subcmd" ]];then

  if (( CURRENT == 1)); then
    _describe -t commands "ghn command" _ghn_subcommands -V1
    return
  else
    local opts curcontext
    local -a repositories

    case "$words[1]" in
      list|open)
        repositories=($(ghn list|perl -lne 'm{github.com/\E([^/]+/[^/]+)} and $a{$1}=1; END{ print for keys %a}'))
        opts=(
          '(-a --all)'{-a,--all}'[List/Open all unread notifications]'
          '(--no-all)--no-all[List/Open not all notifications]'
        )
        _arguments -s : "$opts[@]" '*:repository:'"($repositories)"
        return 0
        ;;
      help)
        subcommands=(list open)
        _arguments -s : "()"'*: :'"($subcommands)"
        return 0
        ;;
    esac
  fi
fi

# Local Variables:
# mode: Shell-Script
# sh-indentation: 2
# indent-tabs-mode: nil
# sh-basic-offset: 2
# End:
# vim: ft=zsh sw=2 ts=2 et
